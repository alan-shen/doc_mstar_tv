==========================================================================================
http://blog.csdn.net/cfy_phonex/article/details/9365983
==========================================================================================
# procrank
-----------

  PID       Vss      Rss      Pss      Uss  cmdline
 1170  1132672K  125280K   86270K   83008K  com.xiaomi.tv.desktop
  453  1161312K   92668K   51960K   47764K  system_server
 1856  1061900K   75808K   38396K   35552K  com.xiaomi.mitv.settings
 1489  1045356K   67000K   29977K   27296K  com.xiaomi.mitv.systemui
  140   437744K   23912K   22314K   21920K  /applications/bin/tvos
  855  1094060K   48528K   19921K   19020K  com.duokan.duokantv
...
==========================================================================================
Android procrank  (/system/xbin/procrank) 工具

	能够列出进程所占用的内存使用情况.顺序为从高到低.
	每个进程占用内存大小以 VSS/RSS/PSS/USS 的形式列出
	内存描述单位通常为页,一页一般 4096Byte.

	--------------------------------------------------------------------------------------
	VSS:
		--Virtual set size 虚拟耗用内存(包含共享库占用的内存)
		--(等同于 ps 命令列出的 VSZ)是单个进程全部可访问的地址空间.
		其大小包括可能还尚未在内存中驻留的部分.
		比如地址空间已经被 malloc 分配,但是还没有实际写入.
		对于确定单个进程实际内存使用大小,VSS 用处不大.
 
	--------------------------------------------------------------------------------------
	RSS:
		--Resident set size实际使用的物理内存(包含共享库占用的内存)
		--是单个进程实际占用的内存大小.
		RSS 易被误导的原因在于,它包括了该进程所使用的所有共享库的全部内存大小.
		对于单个共享库,尽管无论多少个进程使用,实际该共享库只会被装入内存一次.
		对于单个进程的内存使用大小,RSS 不是一个精确的描述.
 
	--------------------------------------------------------------------------------------
	PSS:
		--Proportional set size, 实际使用的物理内存(比例分配共享库占用的内存)
		--不同于RSS,它只是按比例包含其所使用的共享库大小.
		例如, 三个进程使用同一个占用 30 内存页的共享库.对于三个进程中的任何一个,PSS 将只包括 10 个内存页.
		PSS 是一个非常有用的数字,因为系统中全部进程以整体的方式被统计,对于系统中的整体内存使用是一个很好的描述.
		如果一个进程被终止,其PSS 中所使用的共享库大小将会重新按比例分配给剩下的仍在运行并且仍在使用该共享库的进程.
		此种计算方式有轻微的误差,因为当某个进程中止的时候,PSS 没有精确的表示被返还给整个系统的内存大小.
 
	--------------------------------------------------------------------------------------
	USS:
		--Unique Set size, 进程独自占用的物理内存(不包含共享库占用的内存)
		--是单个进程的全部私有内存大小.亦即全部被该进程独占的内存大小.
		USS 是一个非常非常有用的数字, 因为它揭示了运行一个特定进程的真实的内存增量大小.
		如果进程被终止, USS 就是实际被返还给系统的内存大小.
		USS 是针对某个进程开始有可疑内存泄露的情况,进行检测的最佳数字

==========================================================================================
