======================================================================================================
memory leak定位分析 
++++++++++++++++++++

附件是之前调试memory leak的工具。

======================================================================================================
#include "memory_debug.h"
+++++++++++++++++++++++++

	头文件中有对 SIGUSR1 的处理函数, dump 当时的 malloc 信息.

======================================================================================================
使用方法：

	1）将memory_debug.h拷贝到你的程序main函数所在目录
	2）在main函数所在文件添加下面代码：
		+ #include "memory_debug.h"
		...
		
		int main(int argc, char **argv) {
		+    enable_memorydebug();
		...
		}
	3）编译替换要调试的程序，并替换到电视。
	4）用下面命令使能bionic的malloc调试功能

		adb shell setprop libc.debug.malloc 1
		adb shell stop
		adb shell start
		--------------------------------------------------------------
		注: 如果系统开机过程默认设置 "libc.debug.malloc=1"将无法开机!!
		--------------------------------------------------------------
		4.1) 启动updateservice,不要用 start 启动, 要直接启动:

			# updateservice &

		4.2) 启动升级, 直到结束:

			# updatetest /data/update.zip 
		--------------------------------------------------------------

	5）假设要调试进程的进程ID为123，使用下面方法获取当前的memory信息：

		adb shell "kill -s SIGUSR1 123"
		adb pull /data/local/tmp/malloc.dump malloc_01.dump

	6）使用附件的leakparser.py 解析malloc_01.dump，能够查看到当前没有释放的内存的申请位置，大小等信息。

======================================================================================================
注）这个工具一定要在android编译环境中使用，因为它要使用符号信息进行定位。
======================================================================================================
