==============================================================================================================
Reference:
++++++++++

	http://blog.csdn.net/innost/article/details/8876392 (MTP In Android)
	http://www.cnblogs.com/skywang12345/p/3474206.html

==============================================================================================================
MTP/PTP 以及 UMS：
++++++++++++++++++

	MTP 的前身是 PTP, 用户可以把其当作U盘一样, 对其进行目录文件的浏览以及拷贝..
	UMS 与之有本质区别.

		------------------------------------------------------------------------------------------------------
		. UMS 模式下, PC操作存储设备的粒度是设备块(FAT block), 而非文件系统.

			什么意思? 此处举一个简单例子.
				当 Android 手机通过 UMS 将 sdcard 挂载到 PC 后, PC就拥有对sdcard的绝对控制权.
			这样, 手机就无法同时访问 sdcard 了.
				这种做法带来的后果就是 Camera 或 Music 程序将因没有外部存储空间而提示无法进行操作
				(注意,有些厂商的手机对此进行过修改,使得 Camera 能短时间录制一部分视频到内部存储空间)
				这也是Android早期版本中一个很明显的特点.
			另外, 由于 PC 在操作 sdcard 时可能弄坏其文件系统, 这将导致 sdcard 重新挂载到手机后不能被识别.

		------------------------------------------------------------------------------------------------------
		. 如果 Android 手机的 sdcard 以 MTP 模式挂载到 PC 机上:

			SDcard 的控制权其实还是属于手机.只不过智能手机通过 MTP 协议向 PC 机构建了一个虚拟文件系统.
				PC机操作其中的文件时, 都会通过标准 MTP 协议向智能手机发起请求.
			另外, Android把 MTP 功能集成在 MediaProvider[1] 中:
				其好处是PC机操作(例如拷贝或删除等)媒体文件时,媒体数据都会及时更新到媒体数据库中;
				而UMS模式下,当sdcard挂载回手机后,Android还得花较长时间重新扫描媒体文件以更新媒体数据库.
		------------------------------------------------------------------------------------------------------

	MTP 的其他好处:

		. 它可判断PC机拷贝的媒体文件是否受目标手机支持;
		. 甚至可以触发对应的转码程序将其转换成手机支持的格式.

	MTP 比 UMS 差的地方:

		. 传输大文件的速度较慢
		. MTP不能直接修改文件本身.只能先拷贝到本地修改,完毕后再拷贝回去.
		. 除了Windows外,Linux和MacOS对MTP支持还不是很完善

==============================================================================================================
MTP 协议:
+++++++++

	<<MTP Specification v1.0.pdf>>

	协议栈:

		. Pyshical Layer(物理层):
			物理层在MTP协议中用来传输数据.
			目前有三种物理层可供MTP使用.它们分别是:
				. USB      : 其主要特点是传输文件, 同步媒体文件时速度快, 而且可以边工作边充电, 这是目前用的最多的一种方式;
				. IP       : 基于IP的MTP(简称MTP/IP)将通过UPnP来匹配和发现设备.它是家庭网络中是最理想的传输方式;
				. Bluetooth: MTP/BT是最省电, 同时也是速度最慢的一种传输方式, 用处较少.

		. 传输层:
			MTP中,数据传输格式遵循PTP协议

		. 命令层:
			实现了MTP协议中的各种命令.

==============================================================================================================
Android 为何要用 MTP:
+++++++++++++++++++++

	取代没那么好用的 UMS 功能!!

	Android从3.0开始集成MTP功能,主要原因有三个:

		. 手机要支持UMS的话, 必须有一个sd卡, 因为sd卡往往采用Windows支持的分区格式.
				如果想把内部存储空间通过UMS挂载到Windows上, 则内部存储空间需采用特定的分区格式.
				这对某些手机而言根本不可行. 因为内部存储空间本身可能是一个设备, 它们采用统一的分
				区格式. 不能因为需要使用UMS, 而再增加一块特定分区格式的存储设备.

		. UMS挂载到PC后, PC操作系统拥有绝对控制权.
				此时,Android系统将无法操作这些设备.
				根据前文举的Camera例子而言.这对越来越高级的Android版本而言是不可接受的.

		. 另外一个不可忽略的事实就是Windows操作系统在普通劳动人民那儿依然占据极高的市场份额.
				这恐怕也是明知Linux,MacOS对MTP支持力度不够,Android也要集成它的一个重要原因吧.

==============================================================================================================
Android中MTP的代码架构:
+++++++++++++++++++++++

	. C++层包括几个主要对象:

		MtpRequestPacke   负责从USB驱动读取数据, 并结构化命令格式及其参数
		MtpDataPacket     负责结构化手机要返回给PC的数据包
		MtpResponsePacket 负责结构化手机要给PC返回的response
		MtpServer         负责解析来自PC的命令并调用相应的接口函数进行处理

	. Java层包括UsbReceiver,MtpService,MtpServer等对象.其中:

		UsbReceiver       用来监视USB事件,判断何时启动或停止MtpService.
		MtpService        负责启动MtpServer和加载存储设备的信息到数据库.
		MtpServer         负责通过jni接口去启动/停止C++层中MtpServer以及处理Storage的添加和删除.
		MediaProvider     则负责查询和更新数据库.
		MtpDatabase       名字虽然叫Database, 但实际功能用于在MediaProvider和MtpServer之间转换数据格式.
			例如把MTP传递过来的信息（如文件大小、文件路径等）转换成MediaProvider需要的格式以方便其更新数据库.


	. Kernel 层:

		?????

		usb mtp driver ???





==============================================================================================================
